@using Microsoft.AspNetCore.Components
@using MudBlazor.Extensions

<MudGrid>
    <MudItem xs="12" sm="8" Class="d-flex gap-4 justify-center">
        <MudGrid>
            <MudItem xs="12" Class="d-flex gap-4 justify-center">
                <MudCombobox @bind-Value="@_value" @bind-SelectedValues="@_selectedValues" Variant="Variant.Filled" Label="Text" InputPresenter="ValuePresenter.Text" MultiSelection="_multiselection">
                    <ChildContent>
                        @foreach (var item in characters)
                        {
                            <MudComboboxItem Value="@item" Text="@item"></MudComboboxItem>
                        }
                    </ChildContent>
                </MudCombobox>

                <MudCombobox @bind-Value="@_value" @bind-SelectedValues="@_selectedValues" Variant="Variant.Filled" Label="Chip" InputPresenter="ValuePresenter.Chip" MultiSelection="_multiselection">
                    <ChildContent>
                        @foreach (var item in characters)
                        {
                            <MudComboboxItem Value="@item" Text="@item"></MudComboboxItem>
                        }
                    </ChildContent>
                </MudCombobox>
            </MudItem>

            <MudItem xs="12" Class="d-flex gap-4 justify-center">
                <MudCombobox @bind-Value="@_value" @bind-SelectedValues="@_selectedValues" Variant="Variant.Filled" Label="InputContent" InputPresenter="ValuePresenter.ItemContent" MultiSelection="_multiselection">
                    <ChildContent>
                        @foreach (var item in characters)
                        {
                            <MudComboboxItem Value="@item" Text="@item">
                                <MudText Style="white-space: break-spaces">The Value Is: <b>@item</b> and some more long text</MudText>
                            </MudComboboxItem>
                        }
                    </ChildContent>
                </MudCombobox>

                <MudCombobox @bind-Value="@_value" @bind-SelectedValues="@_selectedValues" Variant="Variant.Filled" Label="Input&ItemContent" InputPresenter="ValuePresenter.ItemContent" ItemPresenter="ValuePresenter.ItemContent"  MultiSelection="_multiselection">
                    <ChildContent>
                        @foreach (var item in characters)
                        {
                            <MudComboboxItem Value="@item" Text="@item">
                                <MudText Style="white-space: break-spaces">The Value Is: <b>@item</b> and some more long text</MudText>
                            </MudComboboxItem>
                        }
                    </ChildContent>
                </MudCombobox>
            </MudItem>

            <MudItem xs="12">
                <MudCombobox MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionText))" MultiSelection="_multiselection" @bind-Value="@_value" @bind-SelectedValues="@_selectedValues" T="string" Label="Text Func" Variant="Variant.Filled" Placeholder="Placeholder">
                    @foreach (var item in characters)
                    {
                        <MudComboboxItem T="string" Value="@item" Text="@item">@item</MudComboboxItem>
                    }
                </MudCombobox>
            </MudItem>
        </MudGrid>
        

     
    </MudItem>

    <MudItem xs="12" sm="4">
        <MudStack Spacing="4">
            <MudSwitchM3 @bind-Checked="@_multiselection" Label="Multiselection" Color="Color.Secondary" />
        </MudStack>
    </MudItem>
</MudGrid>

@code {
    string _value;
    IEnumerable<string> _selectedValues;
    bool _multiselection;

    private List<string> characters = new()
    {
        "Harry Potter", "Ron Weasley", "Hermione Granger", "Seamus Finnigan", "Oliver Wood"
    };

    private string GetMultiSelectionText(List<string> selectedValues)
    {
        return $"{selectedValues.Count()} {(selectedValues.Count > 1 ? "sorcerers:" : "sorcerer:")} {string.Join(", ", selectedValues)} {(selectedValues.Count > 1 ? "are" : "is")} ready!";
    }
}