@page "/api"
@using MudBlazor.Extensions
@using System.Text.RegularExpressions
@using System.Security.Cryptography.X509Certificates

<ExamplePage Title="API">
    <ExampleCard Title="Api - MudAnimate" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudAnimate).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudAnimate instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudChipField" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudChipField<string>).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudChipField<string> instance = new();
                        string val = context.GetValue(instance)?.ToString() ?? "null";
                        if (context.Name.Contains("icon", StringComparison.InvariantCultureIgnoreCase))
                        {
                            <MudIcon Icon="val" />
                        }
                        else
                        {
                            <MudText Typo="Typo.body2">@(val.Contains("EventCallback") ? "EventCallback" : val)</MudText>
                        }
                        
                        
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudCodeInput" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudCodeInput<string>).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudCodeInput<string> instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudColorProvider" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudColorProvider).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudColorProvider instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudCsvMapper" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudCsvMapper).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudCsvMapper instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>


    <ExampleCard Title="Api - MudDateWheelPicker" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudDateWheelPicker).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudDateWheelPicker instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudGallery" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudGallery).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudGallery animate = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(animate)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudInputStyler" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudInputStyler).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudInputStyler animate = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(animate)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudListExtended" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudListExtended<string>).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudListExtended<string> instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudLoading" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudLoading).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudLoading instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudLoadingButton" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudLoadingButton).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudLoadingButton instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudPage" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudPage).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudPage instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudSelectExtended" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudSelectExtended<string>).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudSelectExtended<string> instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudSection" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudSection).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudSection instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudPasswordField" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudPasswordField<string>).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudPasswordField<string> instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudPopup" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudPopup).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudPopup instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudQrCode" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudQrCode).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudQrCode instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudScrollbar" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudScrollbar).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudScrollbar instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudSpeedDial" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudSpeedDial).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudSpeedDial instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudSplitter" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudSplitter).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudSplitter instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudStepper & MudStep" HasExpansionPanel="true">
        <MudText Class="ma-2" Typo="Typo.h6" Color="Color.Secondary">Properties</MudText>
        <MudTable Items="@(typeof(MudStepper).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudStepper instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
        <MudText Class="ma-2" Typo="Typo.h6" Color="Color.Secondary">Methods</MudText>
        <MudTable Items="@(typeof(MudStepper).GetMethods().Where(x => x.Name != "SetParametersAsync" && Regex.IsMatch(x.Name[0].ToString(), "[A-Z]")).OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.ReturnType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudStepper instance = new();
                        @*<MudText Typo="Typo.body2">@(context(instance)?.ToString() ?? "null")</MudText>*@
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
        <MudText Class="ma-4" Typo="Typo.h6" Color="Color.Secondary">MudStep</MudText>
        <MudTable Items="@(typeof(MudStep).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudStep instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudSwitchM3" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudSwitchM3<bool>).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudSwitchM3<bool> instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudTextFieldExtended" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudTextFieldExtended<string>).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudTextFieldExtended<string> instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudTransferList" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudTransferList<string>).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudTransferList<string> instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudWheel" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudWheel<string>).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudWheel<string> instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>

    <ExampleCard Title="Api - MudWatch" HasExpansionPanel="true">
        <MudTable Items="@(typeof(MudWatch).GetProperties().Where(x => x.Name != "FieldId" && x.Name != "UserAttributes").OrderBy(x => x.Name).ToList())">
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Default</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@context.Name</MudTd>
                <MudTd DataLabel="Type">@context.PropertyType.Name</MudTd>
                <MudTd DataLabel="Default">
                    @if (true)
                    {
                        MudWatch instance = new();
                        <MudText Typo="Typo.body2">@(context.GetValue(instance)?.ToString() ?? "null")</MudText>
                    }
                </MudTd>
            </RowTemplate>
        </MudTable>
    </ExampleCard>
</ExamplePage>
