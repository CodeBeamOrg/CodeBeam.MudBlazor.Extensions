@page "/mudloading"

@inject ISnackbar Snackbar

<ExamplePage Title="MudLoading">
    <ExampleCard Title="Usage" Description="MudLoading is very useful to create loading conditions faster.">
        <MudGrid>
            <MudItem xs="12" sm="8" Class="d-flex gap-4 align-center flex-wrap">
                <MudPaper Class="mud-width-full" Style="height: 300px; position: relative">
                    <MudLoading @bind-Loading="_loading" Overlap="@_overlap" LoaderType="_loaderType" Darken="_darken" Text="@_text" ClassText="@(_darken ? "white-text" : null)">
                        <MudStack>
                            <MudText>This is a text inside a paper. Its the content.</MudText>
                            <MudButton OnClick="ShowSnackbar" Variant="Variant.Filled" Color="Color.Primary">A Button Can Not Be Clickable While Loading</MudButton>
                        </MudStack>
                    </MudLoading>
                </MudPaper>
            </MudItem>

            <MudItem xs="12" sm="4">
                <MudStack>
                    <MudSwitch @bind-Checked="_loading" Color="Color.Primary">Loading</MudSwitch>
                    <MudCheckBox @bind-Checked="_overlap" Label="Overlap" Color="Color.Primary" />
                    <MudCheckBox @bind-Checked="_darken" Label="Darken" Color="Color.Primary" />
                    <MudSelect @bind-Value="_loaderType" Variant="Variant.Outlined" Label="Loader Type">
                        <MudSelectItem Value="LoaderType.Circular">Circular</MudSelectItem>
                        <MudSelectItem Value="LoaderType.Linear">Linear</MudSelectItem>
                    </MudSelect>
                    <MudTextField @bind-Value="_text" Variant="Variant.Outlined" Label="Text" />
                </MudStack>
            </MudItem>
        </MudGrid>
    </ExampleCard>

    <ExampleCard Title="Custom Loading Indicator" Description="Loading indicator can be a RenderFragment.">
        <MudGrid>
            <MudItem xs="12" sm="8" Class="d-flex gap-4 align-center flex-wrap">
                <MudPaper Class="mud-width-full" Style="height: 300px; position: relative">
                    <MudLoading @bind-Loading="_loading2">
                        <LoaderContent>
                            <div class="mud-width-full mud-height-full d-flex flex-column align-center justify-center">
                                <MudProgressLinear Color="Color.Primary" Indeterminate="true" />
                                <MudStack Row="true" Spacing="2">
                                    <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Tertiary" Size="Size.Small" />
                                    <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Secondary" Size="Size.Medium" />
                                    <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Primary" Size="Size.Large" />
                                    <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Secondary" Size="Size.Medium" />
                                    <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Tertiary" Size="Size.Small" />
                                </MudStack>
                                
                            </div>
                        </LoaderContent>
                        <ChildContent>
                            <MudText>This is a text inside a paper.</MudText>
                        </ChildContent>
                        
                    </MudLoading>
                </MudPaper>
            </MudItem>

            <MudItem xs="12" sm="4">
                <MudStack>
                    <MudSwitch @bind-Checked="_loading2" Color="Color.Primary">Loading</MudSwitch>
                </MudStack>
            </MudItem>
        </MudGrid>
    </ExampleCard>
</ExamplePage>

@code{
    bool _loading = true;
    bool _overlap;
    bool _darken;
    string _text;
    LoaderType _loaderType = LoaderType.Circular;

    bool _loading2 = true;


    private void ShowSnackbar()
    {
        Snackbar.Add("Button clicked.", Severity.Info);
    }
}
