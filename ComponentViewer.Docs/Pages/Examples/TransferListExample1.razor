@using MudBlazor.Extensions

<MudGrid>
    <MudItem xs="12" sm="8" Class="d-flex flex-column align-center justify-center">
        <MudAlert Class="mud-width-full" Severity="Severity.Warning">Limitation: Null items should not use to transfer in MultiSelection.</MudAlert>
        <MudAlert Class="mud-width-full mb-8" Severity="Severity.Warning">Limitation: Constant collections like arrays can not be use in MudTransferList.</MudAlert>
        <MudTransferList T="string" @bind-StartCollection="_startCollection" @bind-EndCollection="_endCollection" Vertical="_vertical" StyleList="background-color: var(--mud-palette-background-grey)" MultiSelection="_multiSelection" MaxItems="null" />
    </MudItem>

    <MudItem xs="12" sm="4">
        <MudStack Spacing="4">
            <MudText><b>Start Collection:</b> @string.Join(", ", _startCollection ?? new List<string>())</MudText>
            <MudText><b>End Collection:</b> @string.Join(", ", _endCollection ?? new List<string>())</MudText>
            <MudSwitchM3 @bind-Checked="_vertical" Label="Vertical" Color="Color.Primary" />
            <MudSwitchM3 @bind-Checked="_multiSelection" Label="MultiSelection" Color="Color.Primary" />
        </MudStack>
    </MudItem>
</MudGrid>

@code{
    ICollection<string> _startCollection = new List<string>() { "Sweden", "Hungary", "Turkey", "England" };
    ICollection<string> _endCollection = new List<string>() { "Brazil", "China", "Germany", "USA" };

    bool _vertical;
    bool _multiSelection;
}
