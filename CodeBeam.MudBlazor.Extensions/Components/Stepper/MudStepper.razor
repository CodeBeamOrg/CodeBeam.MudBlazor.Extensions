@namespace MudExtensions
@inherits MudComponentBase
@using MudExtensions.Enums

<CascadingValue Value="this" IsFixed="true">
    <MudStack Class="@Class" Style="@Style"> @*Row="Vertical"*@
        <div style="@GetStepperStyle()">
            <ol style="grid-column-start: 1; grid-column-end: -1;flex-direction:row;grid-row:1;list-style: none;display: flex;">
            @foreach (MudStep step in _steps)
            {
                <li style="@GetStepPercent()">

                
                @if (step.IsResultStep || (MobileView == true && IsStepActive(step) == false))
                {

                }
                else
                {
                    
                    <div @onclick="@(Linear ? null : () => SetActiveIndex(step))" Class="@HeaderClassname">
                        @{
                            bool active = IsStepActive(step);
                        }
                        @if(step.Template != null)
                        {
                            @step.Template(step)
                        }
                        else
                        {
                            <MudAvatar Class="@((active || step.Status != StepStatus.Continued) ? $"mud-theme-{Color.ToDescriptionString()}" : null)" Variant="@Variant" Size="Size.Small">
                                @if (step.Status == Enums.StepStatus.Completed)
                                {
                                    <MudIcon Icon="@Icons.Material.Filled.Done" Size="Size.Small" />
                                }
                                else if (step.Status == StepStatus.Skipped)
                                {
                                    <MudIcon Icon="@Icons.Material.Filled.Remove" Size="Size.Small" />
                                }
                                else
                                {
                                    @(Steps.IndexOf(step) + 1)
                                }
                            </MudAvatar>
                            @if (HeaderTextView == HeaderTextView.All || HeaderTextView == HeaderTextView.NewLine || (HeaderTextView == HeaderTextView.OnlyActiveText && active))
                            {
                                <div>
                                    <MudText Align="Align.Center" Color="@(active ? Color : Color.Default)" Style="@(active ? "font-weight: 900" : null)">@step.Title</MudText>
                                    @if (step.Optional == true)
                                    {
                                        <MudText Align="@(HeaderTextView == HeaderTextView.NewLine ? Align.Center : Align.Start)" Typo="Typo.subtitle2" Color="@(active ? Color : Color.Default)" Style="@(active ? "font-weight: 500" : null)">@LocalizedStrings.Optional</MudText>
                                    }
                                </div>
                            }
                        }
                    </div>

                    if (_steps.Count - 1 != _steps.IndexOf(step) || MobileView == true)
                    {
                        <span class="@GetDashClassname(step)"></span>
                    }

                    @if (MobileView == true)
                    {
                        <MudText Typo="Typo.body2" Color="@Color">@(_steps?.IndexOf(step) + 1) / @(_steps?.Count)</MudText>
                    }
                    }
                </li>

            }              
            </ol>
            <MudProgressLinear Color="Color.Primary" Value="@ProgressValue" Min="0" Max="100" Style="@GetProgressLinearStyle()" />
        </div>
        <MudStack Row="true" AlignItems="@(HeaderTextView == HeaderTextView.NewLine ? AlignItems.Start : AlignItems.Center)"> @*Row="!Vertical"*@
            @foreach (MudStep step in _steps)
            {
                if (step.IsResultStep || (MobileView == true && IsStepActive(step) == false))
                {
                    continue;
                }
                bool active = IsStepActive(step);
                <div @onclick="@(Linear ? null : () => SetActiveIndex(step))" Class="@HeaderClassname">
                        <MudAvatar Class="@((active || step.Status != StepStatus.Continued) ? $"mud-theme-{Color.ToDescriptionString()}" : null)" Variant="@Variant" Size="Size.Small">
                            @if (step.Status == Enums.StepStatus.Completed)
                            {
                                <MudIcon Icon="@Icons.Material.Filled.Done" Size="Size.Small" />
                            }
                            else if (step.Status == StepStatus.Skipped)
                            {
                                <MudIcon Icon="@Icons.Material.Filled.Remove" Size="Size.Small" />
                            }
                            else
                            {
                                @(Steps.IndexOf(step) + 1)
                            }
                        </MudAvatar>
                    @if (HeaderTextView == HeaderTextView.All || HeaderTextView == HeaderTextView.NewLine || (HeaderTextView == HeaderTextView.OnlyActiveText && active))
                    {
                        <div>
                            <MudText Align="Align.Center" Color="@(active ? Color : Color.Default)" Style="@(active ? "font-weight: 900" : null)">@step.Title</MudText>
                            @if (step.Optional == true)
                            {
                                <MudText Align="@(HeaderTextView == HeaderTextView.NewLine ? Align.Center : Align.Start)" Typo="Typo.subtitle2" Color="@(active ? Color : Color.Default)" Style="@(active ? "font-weight: 500" : null)">@LocalizedStrings.Optional</MudText>
                            }
                        </div>
                    }
                </div>

                if (_steps.Count - 1 != _steps.IndexOf(step) || MobileView == true)
                {
                    <span class="@GetDashClassname(step)"></span>
                }
                
                @if (MobileView == true)
                {
                    <MudText Typo="Typo.body2" Color="@Color">@(_steps?.IndexOf(step) + 1) / @(_steps?.Count)</MudText>
                }
            }            
        </MudStack>

        @if (Loading)
        {
            <MudProgressLinear Indeterminate="true" Color="@Color" />
        }
        @StaticContent
        <MudStack Class="mud-width-full" Justify="Justify.SpaceBetween">
            <div class="@ContentClassname" style="@ContentStyle">
                @ChildContent
            </div>
            
            <div class="d-flex gap-4">
                
                @{
                    bool showResultStep = ShowResultStep();
                }

                @if (!DisablePreviousButton && ActiveIndex != 0)
                {
                    if (IconActionButtons || MobileView)
                    {
                        <MudTooltip Text="@LocalizedStrings.Previous" Delay="300">
                            <MudIconButton Color="@Color" Variant="@Variant" Icon="@Icons.Material.Filled.ChevronLeft" OnClick="@(() => SetActiveIndex(-1))" />
                        </MudTooltip>
                    }
                    else
                    {
                        <MudButton Color="@Color" Variant="@Variant" OnClick="@(() => SetActiveIndex(-1))">@LocalizedStrings.Previous</MudButton>
                    }
                }

                @if (ActionContent != null)
                {
                    @* The user will provide their own MudSpacer in this render fragment *@
                    @ActionContent
                }
                else
                {
                    <MudSpacer />
                }

                @if (showResultStep == false)
                {
                    if ((ActiveIndex < Steps.Count && Steps[ActiveIndex].Status != StepStatus.Continued) || (ActiveIndex == Steps.Count - 1 && HasResultStep() == false && IsAllStepsCompleted()))
                    {
                        if (!DisableStepResultIndicator && MobileView == false)
                        {
                            <MudButton Color="@Color" Variant="@Variant" Disabled="true">@(Steps[ActiveIndex].Status == StepStatus.Completed ? LocalizedStrings.Completed : LocalizedStrings.Skipped)</MudButton>
                        }
                    }
                    else if (ActiveIndex < Steps.Count && Steps[ActiveIndex].Optional == true)
                    {
                        if (!DisableSkipButton)
                        {
                            if (IconActionButtons || MobileView)
                            {
                                <MudTooltip Text="@LocalizedStrings.Skip" Delay="300">
                                    <MudIconButton Color="@Color" Variant="@Variant" Icon="@Icons.Material.Filled.SkipNext" OnClick="@(() => SkipStep(ActiveIndex))" />
                                </MudTooltip>
                            }
                            else
                            {
                                <MudButton Color="@Color" Variant="@Variant" OnClick="@(() => SkipStep(ActiveIndex))">@LocalizedStrings.Skip</MudButton>
                            }
                            
                        }
                    }
                }

                @if (showResultStep == false && !DisableNextButton && !(ActiveIndex == Steps.Count - 1 && HasResultStep() == false && IsAllStepsCompleted()))
                {
                    if (ActiveIndex < Steps.Count && Steps[ActiveIndex].Status != StepStatus.Continued)
                    {
                        if (IconActionButtons || MobileView)
                        {
                            <MudTooltip Text="@GetNextButtonString()" Delay="300">
                                <MudIconButton Color="@Color" Variant="@Variant" Icon="@Icons.Material.Filled.ChevronRight" OnClick="@(() => SetActiveIndex(1))"/>
                            </MudTooltip>
                        }
                        else
                        {
                            <MudButton Color="@Color" Variant="@Variant" OnClick="@(() => SetActiveIndex(1))">@GetNextButtonString()</MudButton>
                        }
                    }
                    else
                    {
                        if (IconActionButtons || MobileView)
                        {
                            <MudTooltip Text="@GetNextButtonString()" Delay="300">
                                <MudIconButton Color="@Color" Variant="@Variant" Icon="@Icons.Material.Filled.ChevronRight" OnClick="@(() => CompleteStep(ActiveIndex))" />
                            </MudTooltip>
                        }
                        else
                        {
                            <MudButton Color="@Color" Variant="@Variant" OnClick="@(() => CompleteStep(ActiveIndex))">@GetNextButtonString()</MudButton>
                        }
                        
                    }
                }

            </div>
        </MudStack>
    </MudStack>
</CascadingValue>

@if (DisableAnimation == false)
{
    <MudAnimate @ref="_animate" Selector="@($".mud-stepper-ani-{_animateGuid.ToString()}")" AnimationType="Enums.AnimationType.Fade" Value="1" Duration="0.5" />
}

