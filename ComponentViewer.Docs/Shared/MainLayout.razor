@namespace ComponentViewer.Docs.Shared
@inherits LayoutComponentBase

<style>
    @(_fontPicker?.ImportFontStyleText(font))
</style>

<CascadingValue Value="this" IsFixed="true">
    <MudLayout>
    <MudAppBar Class="background-gradient-animation mud-width-full" Style="background: linear-gradient(-45deg, var(--mud-palette-dark), var(--mud-palette-primary), var(--mud-palette-dark), var(--mud-palette-secondary), var(--mud-palette-dark)); background-size: 400% 400%; position: fixed; overflow-x: hidden" Dense="true">

            <MudIconButton Class="white-text" Icon="@Icons.Filled.Menu" OnClick="@(() => _drawerOpen = !_drawerOpen)"></MudIconButton>
            <MudIconButton Class="white-text" Icon="@Icons.Custom.Brands.MudBlazor" Href="https://mudblazor.com/" Target="_blank" />
            <MudSpacer />
            <MudText Style="font-weight: 900; color: white">CodeBeam MudExtensions</MudText>
            <MudSpacer />
            <div class="d-flex">
                <MudToggleIconButton @bind-Toggled="IsDarkMode" Class="white-text" Icon="@Icons.Filled.DarkMode" ToggledIcon="@Icons.Filled.LightMode"/>
                <MudIconButton Class="white-text" Icon="@Icons.Filled.Settings" OnClick="@ToggleOpen"/>
                @if (_open == true)
                {
                    <MudPopover Class="pa-4" Open="_open" AnchorOrigin="Origin.TopLeft" TransformOrigin="Origin.BottomRight" Style="width: 320px; height: 400px">
                        <MudStack Justify="Justify.SpaceBetween">
                            <MudSwitchM3 @bind-Checked="_showFontPicker" Color="Color.Secondary" Label="Font Picker"/>
                            <MudSlider T="int" Value="_borderRadius" ValueChanged="BorderRadiusChanged" Min="0" Max="50" Color="Color.Secondary" ValueLabel="true" />
                            <MudText Class="mt-n2" Typo="Typo.subtitle2">Border Radius</MudText>
                            <MudButton Class="mud-width-full" OnClick="@ToggleOpen">Close</MudButton>
                        </MudStack>
                    </MudPopover>
                }
            </div>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" Elevation="1" Variant="@DrawerVariant.Responsive" ClipMode="DrawerClipMode.Docked">
    <MudDrawerHeader>
        <MudText Typo="Typo.h6">MudExtensions</MudText>
    </MudDrawerHeader>
    <MudNavMenu Color="Color.Secondary" Bordered="true">
        <MudNavLink Href="/api">Api</MudNavLink>
        <MudNavGroup Title="Components">
            <MudNavLink Href="/mudanimate">Animate</MudNavLink>
            <MudNavLink Href="/mudcodeinput">CodeInput</MudNavLink>
            <MudNavLink Href="/mudcolorprovider">ColorProvider</MudNavLink>
            <MudNavLink Href="/mudcsvmapper">CsvMapper</MudNavLink>
            <MudNavLink Href="/muddatewheelpicker">DateWheelPicker</MudNavLink>
            <MudNavLink Href="/mudgallery">Gallery</MudNavLink>
            <MudNavLink Href="/mudinputstyler">InputStyler</MudNavLink>
            <MudNavLink Href="/mudlistextended">ListExtended</MudNavLink>
            <MudNavLink Href="/mudloading">Loading</MudNavLink>
            <MudNavLink Href="/mudloadingbutton">LoadingButton</MudNavLink>
            <MudNavLink Href="/mudpage">Page & Section</MudNavLink>
            <MudNavLink Href="/mudpasswordfield">PasswordField</MudNavLink>
            <MudNavLink Href="/mudpopup">Popup</MudNavLink>
            <MudNavLink Href="/mudscrollbar">Scrollbar</MudNavLink>
            <MudNavLink Href="/mudselectextended">SelectExtended</MudNavLink>
            <MudNavLink Href="/mudspeeddial">SpeedDial</MudNavLink>
            <MudNavLink Href="/mudsplitter">Splitter</MudNavLink>
            <MudNavLink Href="/mudstepper">Stepper</MudNavLink>
            <MudNavLink Href="/mudswitchm3">SwitchM3</MudNavLink>
            <MudNavLink Href="/mudtextfieldextended">TextFieldExtended</MudNavLink>
            <MudNavLink Href="/mudwatch">Watch</MudNavLink>
            <MudNavLink Href="/mudwheel">Wheel</MudNavLink>
        </MudNavGroup>
        <MudNavGroup Title="Not Documented">
            <MudNavLink>FontPicker</MudNavLink>
            <MudNavLink>Toggle</MudNavLink>
        </MudNavGroup>
    </MudNavMenu>
</MudDrawer>
    <MudMainContent Class="pt-13">
        @if (_showFontPicker)
        {
            <div class="pa-4">
                <MudFontPicker @ref="@_fontPicker" Label="Font Picker" StaticInputText="true" FontChanged="FontChanged" Variant="Variant.Outlined" Margin="Margin.Dense" Dense="true" Clearable="true" MaxItems="null"/>
            </div>
        }
        @Body
    </MudMainContent>
</MudLayout>
</CascadingValue>

<style>
    .appbar-style {
        background: var(--mud-palette-secondary) !important;
        transition: background-color .6s;
    }
    
    .appbar-style:hover {
        background: linear-gradient(to right, var(--mud-palette-primary) , var(--mud-palette-secondary)) !important;
    }

    .appbar-style .reverse-color {
        color: var(--mud-palette-primary) !important;
        transition: background-color .6s;
    }

        .appbar-style:hover .reverse-color {
            color: var(--mud-palette-secondary) !important;
        }
</style>

<MudThemeProvider Theme="_theme" @bind-IsDarkMode="IsDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

@code {
    MudFontPicker _fontPicker;
    string font = "Roboto";
    internal bool IsDarkMode = false;
    bool _open = false;
    bool _drawerOpen = false;
    bool _showFontPicker = false;
    int _borderRadius = 20;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            if (_fontPicker != null)
            {
                _fontPicker.Font = "Roboto";
                FontChanged();
            }
        }
    }

    MudTheme _theme = new MudTheme()
        {
            LayoutProperties = new LayoutProperties()
            {
                DefaultBorderRadius = $"20px"
            },
        };

    private void FontChanged()
    {
        font = _fontPicker?.Font ?? "Roboto";


        _theme = new MudTheme()
        {
            LayoutProperties = new LayoutProperties()
            {
                DefaultBorderRadius = $"{_borderRadius}px"
            },

            Typography = new Typography()
            {
                Default = new Default()
                {
                    FontFamily = new[] { font, "Roboto", "Poppins", "Helvetica", "sans-serif" }
                },
            }
        };
        StateHasChanged();
    }

    private void ToggleOpen()
    {
        _open = !_open;
    }

    private void BorderRadiusChanged(int val)
    {
        _borderRadius = val;
        FontChanged();
    }
}
