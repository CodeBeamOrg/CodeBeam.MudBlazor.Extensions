@namespace MudExtensions
@typeparam T
@inherits MudDebouncedInput<T>

<CascadingValue Name="Standalone" Value="@StandaloneEx" IsFixed="true">
    <MudInputControl Label="@Label"
                     Variant="@Variant"
                     HelperText="@HelperText"
                     HelperTextOnFocus="@HelperTextOnFocus"
                     CounterText="@GetCounterText()"
                     FullWidth="@FullWidth"
                     Class="@Classname"
                     Error="@HasErrors"
                     ErrorText="@GetErrorText()"
                     ErrorId="@ErrorId"
                     Disabled="@Disabled"
                     Margin="@Margin"
                     Required="@Required"
                     ForId="@FieldId">
        <InputContent>
            <CascadingValue Name="Standalone" Value="false" IsFixed="true">
                @if (AdornmentStart != null)
                {
                    <MudInputExtended T="string"
                                      @ref="InputReference"
                                      @attributes="UserAttributes"
                                      InputType="@_passwordInput"
                                      Lines="@Lines"
                                      Style="@Style"
                                      Variant="@Variant"
                                      TextUpdateSuppression="@TextUpdateSuppression"
                                      Value="@Text"
                                      ValueChanged="(s) => SetTextAsync(s)"
                                      Placeholder="@Placeholder"
                                      Disabled=@Disabled
                                      DisableUnderLine="@DisableUnderLine"
                                      ReadOnly="@ReadOnly"
                                      MaxLength="@MaxLength"
                                      Adornment="@Adornment"
                                      AdornmentAriaLabel="@AdornmentAriaLabel"
                                      Error="@Error"
                                      ErrorId="@ErrorId"
                                      Immediate="@Immediate"
                                      Margin="@Margin"
                                      OnBlur="@OnBlurredAsync"
                                      OnKeyDown="@InvokeKeyDown"
                                      OnInternalInputChanged="OnChange"
                                      OnKeyPress="@InvokeKeyPress"
                                      OnKeyUp="@InvokeKeyUp"
                                      KeyDownPreventDefault="KeyDownPreventDefault"
                                      KeyPressPreventDefault="KeyPressPreventDefault"
                                      KeyUpPreventDefault="KeyUpPreventDefault"
                                      HideSpinButtons="true"
                                      Clearable="@Clearable"
                                      OnClearButtonClick="@OnClearButtonClick"
                                      Pattern="@Pattern">
                        <AdornmentStart>
                            @AdornmentStart
                        </AdornmentStart>
                        <AdornmentEnd>
                            @if (CustomAdornment != null)
                            {
                                @CustomAdornment
                            }
                            else
                            {
                                <MudIconButton Icon="@_passwordIcon" Color="@AdornmentColor" Size="@IconSize" OnClick="AdornmentClick" tabindex="@(AdornmentTabStop ? 0 : -1)"></MudIconButton>
                            }
                        </AdornmentEnd>
                    </MudInputExtended>
                }
                else
                {
                    <MudInputExtended T="string"
                                      @ref="InputReference"
                                      @attributes="UserAttributes"
                                      InputType="@_passwordInput"
                                      Lines="@Lines"
                                      Style="@Style"
                                      Variant="@Variant"
                                      TextUpdateSuppression="@TextUpdateSuppression"
                                      Value="@Text"
                                      ValueChanged="(s) => SetTextAsync(s)"
                                      Placeholder="@Placeholder"
                                      Disabled=@Disabled
                                      DisableUnderLine="@DisableUnderLine"
                                      ReadOnly="@ReadOnly"
                                      MaxLength="@MaxLength"
                                      Adornment="@Adornment"
                                      AdornmentAriaLabel="@AdornmentAriaLabel"
                                      Error="@Error"
                                      ErrorId="@ErrorId"
                                      Immediate="@Immediate"
                                      Margin="@Margin"
                                      OnBlur="@OnBlurredAsync"
                                      OnKeyDown="@InvokeKeyDown"
                                      OnInternalInputChanged="OnChange"
                                      OnKeyPress="@InvokeKeyPress"
                                      OnKeyUp="@InvokeKeyUp"
                                      KeyDownPreventDefault="KeyDownPreventDefault"
                                      KeyPressPreventDefault="KeyPressPreventDefault"
                                      KeyUpPreventDefault="KeyUpPreventDefault"
                                      HideSpinButtons="true"
                                      Clearable="@Clearable"
                                      OnClearButtonClick="@OnClearButtonClick"
                                      Pattern="@Pattern">
                        <AdornmentEnd>
                            @if (CustomAdornment != null)
                            {
                                @CustomAdornment
                            }
                            else
                            {
                                <MudIconButton Icon="@_passwordIcon" Color="@AdornmentColor" Size="@IconSize" OnClick="AdornmentClick" tabindex="@(AdornmentTabStop ? 0 : -1)"></MudIconButton>
                            }
                        </AdornmentEnd>
                    </MudInputExtended>
                }
            </CascadingValue>
        </InputContent>
    </MudInputControl>
</CascadingValue>