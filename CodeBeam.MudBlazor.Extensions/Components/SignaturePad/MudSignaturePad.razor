@using Microsoft.JSInterop
@using MudBlazor.Charts
@using MudBlazor.Utilities
@using System.Text
@namespace MudExtensions
@inject IJSRuntime JsRuntime
@inherits ComponentBase

<MudPaper Elevation="@Elevation" Class="@OuterClass">
    <div class="@ToolbarClassname" style="@ToolbarStyle">
        <MudIconButton Variant="@Variant" Icon="@DrawEraseChipIcon" Color="@Color" OnClick="async () => await IsEditToggled()" Size="@(Dense ? Size.Small : Size.Medium)" />
        @if (ShowClear)
        {
            <MudIconButton OnClick="ClearPad" Variant="@Variant" Color="@Color" Icon="@Icons.Material.Filled.Clear" Size="@(Dense ? Size.Small : Size.Medium)" />
        }
        @if (ShowDownload)
        {
            <MudIconButton OnClick="Download" Variant="@Variant" Color="@Color" Icon="@Icons.Material.Filled.Download" Size="@(Dense ? Size.Small : Size.Medium)" />
        }
        @ToolbarContent
    </div>
    <div class="@CanvasContainerClassname" style="@CanvasContainerStyle">
        <canvas @ref="_reference" id="@_id"></canvas>
    </div>
    <div class="@ToolbarClassname" style="@ToolbarStyle">
        @if (ShowLineWidth)
        {
            <MudNumericField T="decimal" Value="Options.LineWidth" ValueChanged="LineWidthUpdated" Label="@LocalizedStrings.LineWidth"
                             Variant="@Variant" Margin="@(Dense ? Margin.Dense : Margin.Normal)" Min="1" Step="1" />
        }
        @if (ShowStrokeStyle)
        {
            <MudColorPicker Value="Options.StrokeStyle" ValueChanged="StrokeStyleUpdated" Label="@LocalizedStrings.StrokeColor"
                            Variant="@Variant" Margin="@(Dense ? Margin.Dense : Margin.Normal)" />
        }
        @if (ShowLineJoinStyle)
        {
            <MudSelect T="LineJoinTypes" Value="Options.LineJoinStyle" ValueChanged="LineJoinTypeUpdated" ToStringFunc="x => x.ToString()"
                       Label="@LocalizedStrings.LineJoinStyle" Variant="@Variant" Margin="@(Dense ? Margin.Dense : Margin.Normal)" Dense="@Dense">
                @foreach (var value in Enum.GetValues<LineJoinTypes>())
                {
                    <MudSelectItem T="LineJoinTypes" Value="value"></MudSelectItem>
                }
            </MudSelect>
        }
        @if (ShowLineCapStyle)
        {
            <MudSelect T="LineCapTypes" Value="Options.LineCapStyle" ValueChanged="LineCapTypeUpdated" ToStringFunc="x => x.ToString()"
                       Label="@LocalizedStrings.LineCapStyle" Variant="@Variant" Margin="@(Dense ? Margin.Dense : Margin.Normal)" Dense="@Dense">
                @foreach (var value in Enum.GetValues<LineCapTypes>())
                {
                    <MudSelectItem T="LineCapTypes" Value="value"></MudSelectItem>
                }
            </MudSelect>
        }
    </div>
</MudPaper>