@using MudBlazor.Utilities
@using ComponentViewer.Docs.Shared
@using MudBlazor.Extensions


<MudGrid>
    <MudItem xs="12" sm="8">
        <MudColorProvider Override="true"
                          Primary="@_primaryColor?.Value.ToString()"
                          Secondary="@_secondaryColor?.Value.ToString()"
                          Tertiary="@_tertiaryColor?.Value.ToString()"
                          Neutral="@_neutralColor?.Value.ToString()"
                          NeutralVariant="@_neutralVariantColor?.Value.ToString()"
                          Error="@_errorColor?.Value.ToString()"
                          MainTone="_mainTone"
                          ContainerTone="_containerTone"
                          DarkMode="_darkMode"
                          CustomColors="@_customColors" />
        <div>
            <MudStack Row="true">
                <MudStack Spacing="1" Class="d-flex flex-grow-1">
                    <MudPaper Height="150px" Style="background-color: var(--mud-m3-primary)" Class="rounded-0">
                        <MudStack Justify="Justify.SpaceBetween" AlignItems="AlignItems.Stretch">
                            <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-primary)">Primary</MudTextM3>
                            <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-primary)">P-@(_darkMode ? "80" : "40")</MudTextM3>
                            <MudPaper Elevation="0" Height="50px" Style="background-color: var(--mud-m3-on-primary)" Class="rounded-0">
@*                                 <MudStack Justify="Justify.SpaceBetween" AlignItems="AlignItems.Stretch" Row="true">
                                    <MudTextM3 Class="pl-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-primary)">On Primary</MudTextM3>
                                    <MudTextM3 Class="pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-primary)">P-@(_darkMode ? "20" : "100")</MudTextM3>
                                </MudStack> *@
                            </MudPaper>
                        </MudStack>
                    </MudPaper>
                    <MudPaper Height="150px" Style="background-color: var(--mud-m3-primary-container)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                        <MudStack Justify="Justify.SpaceBetween" Class="flex-grow-1">
                            <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-primary-container)">Primary Container</MudTextM3>
                            <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-primary-container)">P-@(_darkMode ? "30" : "90")</MudTextM3>
                            <MudPaper Elevation="0" Height="50px" Style="background-color: var(--mud-m3-on-primary-container)" Class="rounded-0 d-flex flex-column align-center justify-center">
                                <MudStack Justify="Justify.SpaceBetween" Row="true">
                                    <MudTextM3 Class="pl-2"                    TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-primary-container)">On Primary Container</MudTextM3>
                                    <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-primary-container)">P-@(_darkMode ? "90" : "10")</MudTextM3>
                                </MudStack>
                            </MudPaper>
                        </MudStack>
                    </MudPaper>
                </MudStack>
                <MudStack Spacing="1" Class="d-flex flex-grow-1">
                    <MudPaper Height="150px" Style="background-color: var(--mud-m3-secondary)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                        <MudStack Justify="Justify.SpaceBetween" Class="flex-grow-1">
                            <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-secondary)">Secondary</MudTextM3>
                            <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-secondary)">S-@(_darkMode ? "80" : "40")</MudTextM3>
                                <MudPaper Elevation="0" Height="50px" Style="background-color: var(--mud-m3-on-secondary)" Class="rounded-0 d-flex flex-column align-center justify-center">
                                    <MudStack Justify="Justify.SpaceBetween" Row="true">
                                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-secondary)">On Secondary</MudTextM3>
                                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-secondary)">S-@(_darkMode ? "20" : "100")</MudTextM3>
                                </MudStack>
                            </MudPaper>
                        </MudStack>
                    </MudPaper>
                        <MudPaper Height="150px" Style="background-color: var(--mud-m3-secondary-container)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                        <MudStack Justify="Justify.SpaceBetween" Class="flex-grow-1">
                            <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-secondary-container)">Secondary Container</MudTextM3>
                            <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-secondary-container)">S-@(_darkMode ? "30" : "90")</MudTextM3>
                            <MudPaper Elevation="0" Height="50px" Style="background-color: var(--mud-m3-on-secondary-container)" Class="rounded-0 d-flex flex-column align-center justify-center">
                                <MudStack Justify="Justify.SpaceBetween" Row="true">
                                    <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-secondary-container)">On Secondary Container</MudTextM3>
                                    <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-secondary-container)">S-@(_darkMode ? "90" : "10")</MudTextM3>
                                </MudStack>
                            </MudPaper>
                        </MudStack>
                    </MudPaper>
                </MudStack>
                <MudStack Spacing="1" Class="d-flex flex-grow-1">
                        <MudPaper Height="150px" Style="background-color: var(--mud-m3-tertiary)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                        <MudStack Justify="Justify.SpaceBetween" Class="flex-grow-1">
                                <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-tertiary)">Tertiary</MudTextM3>
                                <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-tertiary)">T-@(_darkMode ? "80" : "40")</MudTextM3>
                                <MudPaper Elevation="0" Height="50px" Style="background-color: var(--mud-m3-on-tertiary)" Class="rounded-0 d-flex flex-column align-center justify-center">
                                    <MudStack Row="true">
                                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-tertiary)">On tertiary</MudTextM3>
                                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-tertiary)">T-@(_darkMode ? "20" : "100")</MudTextM3>
                                    </MudStack>
                                </MudPaper>
                        </MudStack>
                    </MudPaper>
                        <MudPaper Height="150px" Style="background-color: var(--mud-m3-tertiary-container)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                        <MudStack Justify="Justify.SpaceBetween" Class="flex-grow-1">
                            <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-tertiary-container)">Tertiary Container</MudTextM3>
                            <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-tertiary-container)">T-@(_darkMode ? "30" : "90")</MudTextM3>
                                <MudPaper Elevation="0" Height="50px" Style="background-color: var(--mud-m3-on-tertiary-container)" Class="rounded-0 d-flex flex-column align-center justify-center">
                                <MudStack Row="true">
                                    <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-tertiary-container)">On Tertiary Container</MudTextM3>
                                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-tertiary-container)">T-@(_darkMode ? "90" : "10")</MudTextM3>
                                </MudStack>
                            </MudPaper>
                        </MudStack>
                    </MudPaper>
                </MudStack>
                <MudStack Spacing="1" Class="d-flex flex-grow-1">
                        <MudPaper Height="150px" Style="background-color: var(--mud-m3-error)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                        <MudStack Justify="Justify.SpaceBetween" Class="flex-grow-1">
                            <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-error)">Error</MudTextM3>
                            <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-error)">E-@(_darkMode ? "80" : "40")</MudTextM3>
                                <MudPaper Elevation="0" Height="50px" Style="background-color: var(--mud-m3-on-error)" Class="rounded-0 d-flex flex-column align-center justify-center">
                                <MudStack Row="true">
                                    <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-error)">On Error</MudTextM3>
                                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-error)">E-@(_darkMode ? "20" : "100")</MudTextM3>
                                </MudStack>
                            </MudPaper>
                        </MudStack>
                    </MudPaper>
                        <MudPaper Height="150px" Style="background-color: var(--mud-m3-error-container)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                        <MudStack Justify="Justify.SpaceBetween" Class="flex-grow-1">
                            <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-error-container)">Error Container</MudTextM3>
                            <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-error-container)">E-@(_darkMode ? "30" : "90")</MudTextM3>
                                <MudPaper Elevation="0" Height="50px" Style="background-color: var(--mud-m3-on-error-container)" Class="rounded-0 d-flex flex-column align-center justify-center">
                                <MudStack Row="true">
                                    <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-error-container)">On Error Container</MudTextM3>
                                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-error-container)">E-@(_darkMode ? "90" : "10")</MudTextM3>
                                </MudStack>
                            </MudPaper>
                        </MudStack>
                    </MudPaper>
                </MudStack>
            </MudStack>
            <MudStack Row="true" Spacing="0">
                    <MudPaper Height="150px" Style="background-color: var(--mud-m3-surface-dim)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                        <MudStack Justify="Justify.SpaceBetween" Class="flex-grow-1">
                            <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-surface)">Surface Dim</MudTextM3>
                            <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "6" : "87")</MudTextM3>
                        </MudStack>
                    </MudPaper>
                    <MudPaper Height="150px" Style="background-color: var(--mud-m3-surface)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                        <MudStack Justify="Justify.SpaceBetween" Class="flex-grow-1">
                            <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-surface)">Surface</MudTextM3>
                            <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "6" : "98")</MudTextM3>
                        </MudStack>
                    </MudPaper>
                    <MudPaper Height="150px" Style="background-color: var(--mud-m3-surface-bright)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                        <MudStack Justify="Justify.SpaceBetween" Class="flex-grow-1">
                            <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-surface)">Surface Bright</MudTextM3>
                            <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "24" : "98")</MudTextM3>
                        </MudStack>
                    </MudPaper>
            </MudStack>
            <MudStack Row="true" Spacing="0">

                <MudPaper Height="150px" Style="background-color: var(--mud-m3-surface-container-lowest)" Class="rounded-0 d-flex flex-column flex-grow-1 flex-shrink-1 align-stretch justify-center">
                    <MudStack Justify="Justify.SpaceBetween">
                        <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-surface)">Surface Container Lowest</MudTextM3>
                        <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "4" : "100")</MudTextM3>
                    </MudStack>
                </MudPaper>
                <MudPaper Height="150px" Style="background-color: var(--mud-m3-surface-container-low)" Class="rounded-0 d-flex flex-column flex-grow-1 flex-shrink-1 align-stretch justify-center">
                    <MudStack Justify="Justify.SpaceBetween">
                        <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-surface)">Surface Container Low</MudTextM3>
                        <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "10" : "96")</MudTextM3>
                    </MudStack>
                </MudPaper>
                <MudPaper Height="150px" Style="background-color: var(--mud-m3-surface-container)" Class="rounded-0 d-flex flex-column flex-grow-1 flex-shrink-1 align-stretch justify-center">
                    <MudStack Justify="Justify.SpaceBetween">
                        <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-surface)">Surface Container</MudTextM3>
                        <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "12" : "94")</MudTextM3>
                    </MudStack>
                </MudPaper>
                <MudPaper Height="150px" Style="background-color: var(--mud-m3-surface-container-high)" Class="rounded-0 d-flex flex-column flex-grow-1 flex-shrink-1 align-stretch justify-center">
                    <MudStack Justify="Justify.SpaceBetween">
                        <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-surface)">Surface Container High</MudTextM3>
                        <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "17" : "92")</MudTextM3>
                    </MudStack>
                </MudPaper>
                <MudPaper Height="150px" Style="background-color: var(--mud-m3-surface-container-highest)" Class="rounded-0 d-flex flex-column flex-grow-1 flex-shrink-1 align-stretch justify-center">
                    <MudStack Justify="Justify.SpaceBetween">
                        <MudTextM3 Class="pt-2 pl-2"               TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-surface)">Surface Container Highest</MudTextM3>
                        <MudTextM3 Class="d-flex justify-end pr-2" TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "22" : "90")</MudTextM3>
                    </MudStack>
                </MudPaper>
        </MudStack>
            <MudStack Row="true" Spacing="0">
                <MudPaper Height="50px" Style="background-color: var(--mud-m3-on-surface)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                    <MudStack Row="true" Justify="Justify.SpaceBetween" Class="flex-grow-1">
                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-surface)">On Surface</MudTextM3>
                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-surface)">N-@(_darkMode ? "90" : "10")</MudTextM3>
                    </MudStack>
                </MudPaper>
                <MudPaper Height="50px" Style="background-color: var(--mud-m3-on-surface-variant)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                    <MudStack  Row="true" Justify="Justify.SpaceBetween" Class="flex-grow-1">
                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-surface-variant)">On Surface Variant</MudTextM3>
                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-surface-variant)">NV-@(_darkMode ? "80" : "30")</MudTextM3>
                    </MudStack>
                </MudPaper>
                <MudPaper Height="50px" Style="background-color: var(--mud-m3-outline)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                    <MudStack Row="true" Justify="Justify.SpaceBetween" Class="flex-grow-1">
                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-surface-variant)">Outline</MudTextM3>
                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-surface-variant)">NV-@(_darkMode ? "60" : "50")</MudTextM3>
                    </MudStack>
                </MudPaper>
                <MudPaper Height="50px" Style="background-color: var(--mud-m3-outline-variant)" Class="rounded-0 d-flex flex-column flex-grow-1 align-stretch justify-center">
                    <MudStack Row="true" Justify="Justify.SpaceBetween" Class="flex-grow-1">
                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Medium" Style="color: var(--mud-m3-on-surface)">Outline Variant</MudTextM3>
                        <MudTextM3 TypeStyle="TypeStyle.Label" TypeSize="TypeSize.Small" Style="color: var(--mud-m3-on-surface)">NV-@(_darkMode ? "30" : "80")</MudTextM3>
                    </MudStack>
                </MudPaper>
        </MudStack>
        </div>

        @if (_showAllTones)
        {
            <div class="d-flex mt-2 flex-wrap justify-center">
                @for (int i = 0; i <= 100; i = i + 10)
                {
                    int a = i;
                    <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-primary-{a})")" Class="d-flex align-center justify-center">
                        <MudText Class="@(a <= 50 ? "white-text" : "black-text")">@a</MudText>
                    </MudPaper>
                    if (a == 90)
                    {
                        <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-primary-99)")" Class="d-flex align-center justify-center">
                            <MudText Class="black-text">99</MudText>
                        </MudPaper>
                    }
                }
            </div>
        }

        <MudDivider Class="mud-width-full mt-4" />

            @if (_showAllTones)
        {
            <div class="d-flex mt-2 flex-wrap justify-center">
                @for (int i = 0; i <= 100; i = i + 10)
                {
                    int a = i;
                    <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-secondary-{a})")" Class="d-flex flex-column align-center justify-center">
                        <MudText Class="@(a <= 50 ? "white-text" : "black-text")">@a</MudText>
                    </MudPaper>
                    if (a == 90)
                    {
                        <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-secondary-99)")" Class="d-flex align-center justify-center">
                            <MudText Class="black-text">99</MudText>
                        </MudPaper>
                    }
                }
            </div>
        }

        <MudDivider Class="mud-width-full mt-4" />

      
            @if (_showAllTones)
        {
            <div class="d-flex mt-2 flex-wrap justify-center">
                @for (int i = 0; i <= 100; i = i + 10)
                {
                    int a = i;
                    <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-tertiary-{a})")" Class="d-flex align-center justify-center">
                        <MudText Class="@(a <= 50 ? "white-text" : "black-text")">@a</MudText>
                    </MudPaper>
                    if (a == 90)
                    {
                        <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-tertiary-99)")" Class="d-flex align-center justify-center">
                            <MudText Class="black-text">99</MudText>
                        </MudPaper>
                    }
                }
            </div>
        }

        <MudDivider Class="mud-width-full mt-4" />

        <div class="d-flex gap-4 flex-wrap justify-center mt-4">
            <MudPaper Height="180px" Style="background-color: var(--mud-m3-neutral)" Class="d-flex flex-column align-center justify-center">
                <MudText Style="color: var(--mud-m3-on-neutral)">Neutral</MudText>
                <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-on-neutral)">Tone @(_darkMode ? "80" : _mainTone.ToString())</MudText>
                </MudPaper>
                <MudPaper Height="180px" Style="background-color: var(--mud-m3-on-neutral)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-neutral)">On Neutral</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-neutral)">Tone @(_darkMode ? "20" : "100")</MudText>
                </MudPaper>
                <MudPaper Height="180px" Style="background-color: var(--mud-m3-neutral-container)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-on-neutral-container)">Neutral Container</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-on-neutral-container)">Tone @(_containerTone == 90 && _darkMode == true ? "30" : _containerTone.ToString())</MudText>
                </MudPaper>
                <MudPaper Height="180px" Style="background-color: var(--mud-m3-on-neutral-container)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-neutral-container)">On Neutral Container</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-neutral-container)">Tone @(_containerTone == 90 && _darkMode == true ? "90" : 100 - _containerTone)</MudText>
                </MudPaper>
            </div>

            @if (_showAllTones)
        {
            <div class="d-flex mt-2 flex-wrap justify-center">
                @for (int i = 0; i <= 100; i = i + 10)
                {
                    int a = i;
                    <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-neutral-{a})")" Class="d-flex align-center justify-center">
                        <MudText Class="@(a <= 50 ? "white-text" : "black-text")">@a</MudText>
                    </MudPaper>
                    if (a == 90)
                    {
                        <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-neutral-99)")" Class="d-flex align-center justify-center">
                            <MudText Class="black-text">99</MudText>
                        </MudPaper>
                    }
                }
            </div>
        }

        <MudDivider Class="mud-width-full mt-4" />

        <div class="d-flex gap-4 flex-wrap justify-center mt-4">
            <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-neutral-variant)" Class="d-flex flex-column align-center justify-center">
                <MudText Style="color: var(--mud-m3-on-neutral-variant)">Neutral Variant</MudText>
                <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-on-neutral-variant)">Tone @(_darkMode ? "80" : _mainTone.ToString())</MudText>
                </MudPaper>
                <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-on-neutral-variant)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-neutral-variant)">On Neutral Variant</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-neutral-variant)">Tone @(_darkMode ? "20" : "100")</MudText>
                </MudPaper>
                <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-neutral-variant-container)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-on-neutral-variant-container)">Neutral Variant Container</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-on-neutral-variant-container)">Tone @(_containerTone == 90 && _darkMode == true ? "30" : _containerTone.ToString())</MudText>
                </MudPaper>
                <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-on-neutral-variant-container)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-neutral-variant-container)">On Neutral Container</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-neutral-variant-container)">Tone @(_containerTone == 90 && _darkMode == true ? "90" : 100 - _containerTone)</MudText>
                </MudPaper>
            </div>

            @if (_showAllTones)
        {
            <div class="d-flex mt-2 flex-wrap justify-center">
                @for (int i = 0; i <= 100; i = i + 10)
                {
                    int a = i;
                    <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-neutral-variant-{a})")" Class="d-flex align-center justify-center">
                        <MudText Class="@(a <= 50 ? "white-text" : "black-text")">@a</MudText>
                    </MudPaper>
                    if (a == 90)
                    {
                        <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-neutral-variant-99)")" Class="d-flex align-center justify-center">
                            <MudText Class="black-text">99</MudText>
                        </MudPaper>
                    }
                }
            </div>
        }

        <MudDivider Class="mud-width-full mt-4" />

        <div class="d-flex gap-4 flex-wrap justify-center mt-4">
            <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-error)" Class="d-flex flex-column align-center justify-center">
                <MudText Style="color: var(--mud-m3-on-error)">Error</MudText>
                <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-on-error)">Tone @(_darkMode ? "80" : _mainTone.ToString())</MudText>
                </MudPaper>
                <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-on-error)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-error)">On Error</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-error)">Tone @(_darkMode ? "20" : "100")</MudText>
                </MudPaper>
                <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-error-container)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-on-error-container)">Error Container</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-on-error-container)">Tone @(_containerTone == 90 && _darkMode == true ? "30" : _containerTone.ToString())</MudText>
                </MudPaper>
                <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-on-error-container)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-error-container)">On Error Container</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-error-container)">Tone @(_containerTone == 90 && _darkMode == true ? "90" : 100 - _containerTone)</MudText>
                </MudPaper>
            </div>

            @if (_showAllTones)
        {
            <div class="d-flex mt-2 flex-wrap justify-center">
                @for (int i = 0; i <= 100; i = i + 10)
                {
                    int a = i;
                    <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-error-{a})")" Class="d-flex align-center justify-center">
                        <MudText Class="@(a <= 50 ? "white-text" : "black-text")">@a</MudText>
                    </MudPaper>
                    if (a == 90)
                    {
                        <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-error-99)")" Class="d-flex align-center justify-center">
                            <MudText Class="black-text">99</MudText>
                        </MudPaper>
                    }
                }
            </div>
        }

        <MudDivider Class="mud-width-full mt-4" />

        <div class="d-flex gap-4 flex-wrap justify-center mt-4">
            <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-hailnavy)" Class="d-flex flex-column align-center justify-center">
                <MudText Style="color: var(--mud-m3-onhailnavy)">Hail Navy</MudText>
                <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-onhailnavy)">Tone @(_darkMode ? "80" : _mainTone.ToString())</MudText>
                </MudPaper>
                <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-onhailnavy)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-hailnavy)">On Hail Navy</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-hailnavy)">Tone @(_darkMode ? "20" : "100")</MudText>
                </MudPaper>
                <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-hailnavy-container)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-onhailnavy-container)">Hail Navy Container</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-onhailnavy-container)">Tone @(_containerTone == 90 && _darkMode == true ? "30" : _containerTone.ToString())</MudText>
                </MudPaper>
                <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-onhailnavy-container)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-hailnavy-container)">On Hail Navy Container</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-hailnavy-container)">Tone @(_containerTone == 90 && _darkMode == true ? "90" : 100 - _containerTone)</MudText>
                </MudPaper>
            </div>

            @if (_showAllTones)
        {
            <div class="d-flex mt-2 flex-wrap justify-center">
                @for (int i = 0; i <= 100; i = i + 10)
                {
                    int a = i;
                    <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-hailnavy-{a})")" Class="d-flex align-center justify-center">
                        <MudText Class="@(a <= 50 ? "white-text" : "black-text")">@a</MudText>
                    </MudPaper>
                    if (a == 90)
                    {
                        <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-hailnavy-99)")" Class="d-flex align-center justify-center">
                            <MudText Class="black-text">99</MudText>
                        </MudPaper>
                    }
                }
            </div>
        }

        <MudDivider Class="mud-width-full mt-4" />

        <div class="d-flex gap-4 flex-wrap justify-center mt-4">
            <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-maize)" Class="d-flex flex-column align-center justify-center">
                <MudText Style="color: var(--mud-m3-onmaize)">Maize</MudText>
                <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-onmaize)">Tone @(_darkMode ? "80" : _mainTone.ToString())</MudText>
                </MudPaper>
                <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-onmaize)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-maize)">On Maize</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-maize)">Tone @(_darkMode ? "20" : "100")</MudText>
                </MudPaper>
                <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-maize-container)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-onmaize-container)">Maize Container</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-onmaize-container)">Tone @(_containerTone == 90 && _darkMode == true ? "30" : _containerTone.ToString())</MudText>
                </MudPaper>
                <MudPaper Width="180px" Height="180px" Style="background-color: var(--mud-m3-onmaize-container)" Class="d-flex flex-column align-center justify-center">
                    <MudText Style="color: var(--mud-m3-maize-container)">On Maize Container</MudText>
                    <MudText Typo="Typo.subtitle2" Style="color: var(--mud-m3-maize-container)">Tone @(_containerTone == 90 && _darkMode == true ? "90" : 100 - _containerTone)</MudText>
                </MudPaper>
            </div>

            @if (_showAllTones)
        {
            <div class="d-flex mt-2 flex-wrap justify-center">
                @for (int i = 0; i <= 100; i = i + 10)
                {
                    int a = i;
                    <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-maize-{a})")" Class="d-flex align-center justify-center">
                        <MudText Class="@(a <= 50 ? "white-text" : "black-text")">@a</MudText>
                    </MudPaper>
                    if (a == 90)
                    {
                        <MudPaper Width="64px" Height="64px" Style="@($"background-color: var(--mud-maize-99)")" Class="d-flex align-center justify-center">
                            <MudText Class="black-text">99</MudText>
                        </MudPaper>
                    }
                }
            </div>
        }

    </MudItem>
    <MudItem xs="12" sm="4">
        <MudStack Spacing="4">
            <MudSwitchM3 @bind-Checked="_showAllTones" Label="Show All Tones" Color="Color.Primary" />
            <MudSwitchM3 @bind-Checked="_darkMode" Label="Dark Mode" Color="Color.Primary" />
            <MudSlider @bind-Value="_mainTone" ValueLabel="true">Main Tone</MudSlider>
            <MudSlider @bind-Value="_containerTone" Min="51" Max="100" ValueLabel="true">Container Tone</MudSlider>
            <MudColorPicker @bind-Value="_primaryColor" Variant="Variant.Outlined" Label="Primary Color" />
            <MudColorPicker @bind-Value="_secondaryColor" Variant="Variant.Outlined" Label="Secondary Color" />
            <MudColorPicker @bind-Value="_tertiaryColor" Variant="Variant.Outlined" Label="Tertiary Color" />
            <MudColorPicker @bind-Value="_neutralColor" Variant="Variant.Outlined" Label="Neutral Color" />
            <MudColorPicker @bind-Value="_neutralVariantColor" Variant="Variant.Outlined" Label="Neutral Variant Color" />
            <MudColorPicker @bind-Value="_errorColor" Variant="Variant.Outlined" Label="Error Color" />
            <MudColorPicker Disabled="true" @bind-Value="_customColor1" Variant="Variant.Outlined" Label="Custom Color 1" />
            <MudColorPicker Disabled="true" @bind-Value="_customColor2" Variant="Variant.Outlined" Label="Custom Color 2" />
        </MudStack>
    </MudItem>
</MudGrid>

@code {
    MudColor _primaryColor = new MudColor("#6750A4");
    MudColor _secondaryColor = new MudColor("#625B71");
    MudColor _tertiaryColor = new MudColor("#7D5260");
    MudColor _neutralColor = new MudColor("#615D67");
    MudColor _neutralVariantColor = new MudColor("#5F5D62");
    MudColor _errorColor = new MudColor("#B3261E");

    MudColor _customColor1 = new MudColor("#434C56");
    MudColor _customColor2 = new MudColor("#FBEC5D");

    Dictionary<string, string> _customColors = new()
    {
        {"hailnavy", "#434C56"},
        {"maize", "#FBEC5D"}
    };


    int _mainTone = 40;
    int _containerTone = 90;
    bool _showAllTones = true;
    bool _darkMode = false;
}
