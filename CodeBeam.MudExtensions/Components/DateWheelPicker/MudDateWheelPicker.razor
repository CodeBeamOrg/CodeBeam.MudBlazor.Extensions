@namespace MudExtensions

@inherits MudBaseInput<DateTime?>

<CascadingValue Name="SubscribeToParentForm" Value="false" IsFixed="true">
    <div class="mud-select">
        <MudInputControl Label="@Label" Variant="@Variant" HelperText="@HelperText" HelperTextOnFocus="@HelperTextOnFocus" FullWidth="@FullWidth" Margin="@Margin" Class="@Classname" Style="@Style"
                         Error="@Error" ErrorText="@ErrorText" ErrorId="@ErrorId" Disabled="@Disabled" @onclick="@(Editable ? null : ToggleMenu)" Required="@Required" ForId="@FieldId">
            <InputContent>
                <MudInput 
                          @ref="InputReference" Class="mud-select-input" Margin="@Margin" Placeholder="@Placeholder"
                          Variant="@Variant" InputType="InputType.Text"
                          TextUpdateSuppression="false"
                          Value="@(Text)" DisableUnderLine="@DisableUnderLine"
                          Disabled="@Disabled" ReadOnly="!Editable" Error="@Error" ErrorId="@ErrorId"
                          OnAdornmentClick="HandleAdornmentClick" AdornmentIcon="@_currentIcon" Adornment="Adornment.End"
                          AdornmentColor="@AdornmentColor" IconSize="@IconSize" OnBlur="HandleOnBlur"
                          Clearable="@Clearable"
                          @attributes="UserAttributes" />
                <MudPopover Class="" Open=@(_isOpen) MaxHeight="@MaxHeight" AnchorOrigin="@AnchorOrigin" TransformOrigin="@TransformOrigin" RelativeWidth="true">
                    @if (ShowToolbar || SubmitOnClose == false)
                    {
                        <div class="d-flex">
                            @if (SubmitOnClose == false)
                            {
                                <MudIconButton Icon="@Icons.Filled.Done" OnClick="@(() => CloseMenu(true))" />
                            }
                            <MudSpacer />
                            @if (ShowToolbar)
                            {
                                <MudIconButton Icon="@Icons.Filled.Sync" Disabled="@(DateView == DateView.Both)" OnClick="@(() => ToggleDateView())" />
                                <MudIconButton Icon="@(DateView == DateView.Both ? Icons.Filled.ChevronLeft : Icons.Filled.ChevronRight)" OnClick="@(() => ExpandDateView())" />
                            }
                        </div>
                    }
                    
                    <div class="d-flex">
                        @if (DateView == DateView.Date || DateView == DateView.Both)
                        {

                            <MudWheel Class="mud-width-full" @bind-Value="_day" ItemCollection="Days" Label="@(ShowHeader ? "Day" : null)" ToStringFunc="new Func<int, string>(NumberToString)" />
                            <MudWheel Class="mud-width-full" @bind-Value="_month" ItemCollection="Months" Label="@(ShowHeader ? "Month" : null)" ToStringFunc="new Func<int, string>(NumberToString)" />
                            <MudWheel Class="mud-width-full" @bind-Value="_year" ItemCollection="Years" Label="@(ShowHeader ? "Year" : null)" />
                            
                        }
                        @if (DateView == DateView.Time || DateView == DateView.Both)
                        {
                            <MudWheel Class="mud-width-full" @bind-Value="_hour" ItemCollection="Hours" Label="@(ShowHeader ? "Hour" : null)" ToStringFunc="new Func<int, string>(NumberToString)" />
                            <MudWheel Class="mud-width-full" @bind-Value="_minute" ItemCollection="Minutes" Label="@(ShowHeader ? "Minute" : null)" ToStringFunc="new Func<int, string>(NumberToString)" />
                        }
                    </div>
                </MudPopover>
            </InputContent>
        </MudInputControl>
    </div>

</CascadingValue>
<!-- mousedown instead of click needed to close the menu before OnLostFocus runs -->
<MudOverlay Visible="_isOpen" @onmousedown="@(() => CloseMenu(SubmitOnClose))" LockScroll="@LockScroll" />