@using MudBlazor.Utilities
@using ComponentViewer.Docs.Shared
@using MudBlazor.Extensions


<MudGrid>
    <MudItem xs="12" sm="8">
        <MudColorProvider Override="true"
                          Primary="@_primaryColor?.Value.ToString()"
                          Secondary="@_secondaryColor?.Value.ToString()"
                          Tertiary="@_tertiaryColor?.Value.ToString()"
                          Neutral="@_neutralColor?.Value.ToString()"
                          NeutralVariant="@_neutralVariantColor?.Value.ToString()"
                          Error="@_errorColor?.Value.ToString()"
                          MainTone="_mainTone"
                          ContainerTone="_containerTone"
                          DarkMode="_darkMode"
                          CustomColors="@_customColors" />
        <MudStack Spacing="3">
            <MudStack Row="true">
                @for (var i = 0; i < 4; i++)
                {
                    var label = i switch
                    {
                        0 => "Primary",
                        1 => "Secondary",
                        2 => "Tertiary",
                        3 => "Error",
                        _ => throw new Exception("Invalid index")
                    };

                    var color = i switch
                    {
                        0 => "primary",
                        1 => "secondary",
                        2 => "tertiary",
                        3 => "error",
                        _ => throw new Exception("Invalid index")
                    };

                    var keyTone = (_darkMode ? "80" : "40");
                    var onKeyTone = (_darkMode ? "20" : "100");
                    var containerTone = (_darkMode ? "30" : "90");
                    var onContainerTone = (_darkMode? "90" : "10");
                    
                    <RelatedTones Color="@color" Label="@label" KeyTone="@keyTone" OnKeyTone="@onKeyTone" ContainerTone="@containerTone" OnContainerTone="@onContainerTone" />
                }

            </MudStack>
            <MudStack Row="true" Spacing="0">
                <MudStack Justify="Justify.SpaceBetween" Spacing="0" Class="flex-grow-1 pa-2" Style="background-color: var(--mud-m3-surface-dim)">
                    <MudTextM3 Typo="TypoM3.Label" Size="Size.Medium" Style="color: var(--mud-m3-on-surface)">Surface Dim</MudTextM3>
                    <MudTextM3 Class="d-flex justify-end" Typo="TypoM3.Label" Size="Size.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "6" : "87")</MudTextM3>
                </MudStack>
                <MudStack Justify="Justify.SpaceBetween" Spacing="0" Class="flex-grow-1 pa-2" Style="background-color: var(--mud-m3-surface)">
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Medium" Style="color: var(--mud-m3-on-surface)">Surface</MudTextM3>
                        <MudTextM3 Class="d-flex justify-end" Typo="TypoM3.Label" Size="Size.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "6" : "98")</MudTextM3>
                </MudStack>
                <MudStack Justify="Justify.SpaceBetween" Spacing="0" Class="flex-grow-1 pa-2" Style="background-color: var(--mud-m3-surface-bright)">
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Medium" Style="color: var(--mud-m3-on-surface)">Surface Bright</MudTextM3>
                        <MudTextM3 Class="d-flex justify-end" Typo="TypoM3.Label" Size="Size.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "24" : "98")</MudTextM3>
                </MudStack>
            </MudStack>
            <MudStack Row="true" Spacing="0">
                <MudStack Justify="Justify.SpaceBetween" Class="pa-2" Style="background-color: var(--mud-m3-surface-container-lowest)">
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Medium" Style="color: var(--mud-m3-on-surface)">Surface Container Lowest</MudTextM3>
                        <MudTextM3 Class="d-flex justify-end" Typo="TypoM3.Label" Size="Size.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "4" : "100")</MudTextM3>
                </MudStack>
                <MudStack Justify="Justify.SpaceBetween" Class="pa-2" Style="background-color: var(--mud-m3-surface-container-low)">
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Medium" Style="color: var(--mud-m3-on-surface)">Surface Container Low</MudTextM3>
                        <MudTextM3 Class="d-flex justify-end" Typo="TypoM3.Label" Size="Size.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "10" : "96")</MudTextM3>
                </MudStack>
                <MudStack Justify="Justify.SpaceBetween" Class="pa-2" Style="background-color: var(--mud-m3-surface-container)">
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Medium" Style="color: var(--mud-m3-on-surface)">Surface Container</MudTextM3>
                        <MudTextM3 Class="d-flex justify-end" Typo="TypoM3.Label" Size="Size.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "12" : "94")</MudTextM3>
                </MudStack>
                <MudStack Justify="Justify.SpaceBetween" Class="pa-2" Style="background-color: var(--mud-m3-surface-container-high)">
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Medium" Style="color: var(--mud-m3-on-surface)">Surface Container High</MudTextM3>
                        <MudTextM3 Class="d-flex justify-end" Typo="TypoM3.Label" Size="Size.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "17" : "92")</MudTextM3>
                </MudStack>
                <MudStack Justify="Justify.SpaceBetween" Class="pa-2" Style="background-color: var(--mud-m3-surface-container-highest)">
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Medium" Style="color: var(--mud-m3-on-surface)">Surface Container Highest</MudTextM3>
                        <MudTextM3 Class="d-flex justify-end" Typo="TypoM3.Label" Size="Size.Small" Style="color: var(--mud-m3-on-surface)">N-@(_darkMode ? "22" : "90")</MudTextM3>
                </MudStack>
            </MudStack>
            <MudStack Row="true" Spacing="0">
                <MudStack Row="true" Justify="Justify.SpaceBetween" Class="pa-2 flex-grow-1" Style="background-color: var(--mud-m3-on-surface)">
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Medium" Style="color: var(--mud-m3-surface)">On Surface</MudTextM3>
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Small" Style="color: var(--mud-m3-surface)">N-@(_darkMode ? "90" : "10")</MudTextM3>
                </MudStack>
                <MudStack Row="true" Justify="Justify.SpaceBetween" Class="pa-2 flex-grow-1" Style="background-color: var(--mud-m3-on-surface-variant">
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Medium" Style="color: var(--mud-m3-surface-variant)">On Surface Variant</MudTextM3>
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Small" Style="color: var(--mud-m3-surface-variant)">NV-@(_darkMode ? "80" : "30")</MudTextM3>
                </MudStack>
                <MudStack Row="true" Justify="Justify.SpaceBetween" Class="pa-2 flex-grow-1" Style="background-color: var(--mud-m3-outline)">
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Medium" Style="color: var(--mud-m3-surface-variant)">Outline</MudTextM3>
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Small" Style="color: var(--mud-m3-surface-variant)">NV-@(_darkMode ? "60" : "50")</MudTextM3>
                </MudStack>
                <MudStack Row="true" Justify="Justify.SpaceBetween" Class="pa-2 flex-grow-1" Style="background-color: var(--mud-m3-outline-variant)">
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Medium" Style="color: var(--mud-m3-on-surface)">Outline Variant</MudTextM3>
                        <MudTextM3 Typo="TypoM3.Label" Size="Size.Small" Style="color: var(--mud-m3-on-surface)">NV-@(_darkMode ? "30" : "80")</MudTextM3>
                </MudStack>
            </MudStack>

            <MudStack Row="true">
                @for (var i = 0; i < 2; i++)
                {
                    var label = i switch
                    {
                        0 => "Hail Navy",
                        1 => "Maize",
                        _ => throw new Exception("Invalid index")
                    };

                    var color = i switch
                    {
                        0 => "hailnavy",
                        1 => "maize",
                        _ => throw new Exception("Invalid index")
                    };

                    var keyTone = (_darkMode ? "80" : "40");
                    var onKeyTone = (_darkMode ? "20" : "100");
                    var containerTone = (_darkMode ? "30" : "90");
                    var onContainerTone = (_darkMode ? "90" : "10");

                    <RelatedTones Color="@color" Label="@label" KeyTone="@keyTone" OnKeyTone="@onKeyTone" ContainerTone="@containerTone" OnContainerTone="@onContainerTone" />
                }
            </MudStack>

            @if (_showAllTones)
            {
                <Tones Color="primary"/>
                <Tones Color="secondary"/>
                <Tones Color="tertiary" />
                <Tones Color="error" />
                <Tones Color="hailnavy" />
                <Tones Color="maize" />
            }
        </MudStack>

    </MudItem>
    <MudItem xs="12" sm="4">
        <MudStack Spacing="4">
            <MudSwitchM3 @bind-Checked="_showAllTones" Label="Show All Tones" Color="Color.Primary" />
            <MudSwitchM3 @bind-Checked="_darkMode" Label="Dark Mode" Color="Color.Primary" />
            <MudColorPicker @bind-Value="_primaryColor" Variant="Variant.Outlined" Label="Primary Color" />
            <MudColorPicker @bind-Value="_secondaryColor" Variant="Variant.Outlined" Label="Secondary Color" />
            <MudColorPicker @bind-Value="_tertiaryColor" Variant="Variant.Outlined" Label="Tertiary Color" />
            <MudColorPicker @bind-Value="_neutralColor" Variant="Variant.Outlined" Label="Neutral Color" />
            <MudColorPicker @bind-Value="_neutralVariantColor" Variant="Variant.Outlined" Label="Neutral Variant Color" />
            <MudColorPicker @bind-Value="_errorColor" Variant="Variant.Outlined" Label="Error Color" />
            <MudColorPicker Disabled="true" @bind-Value="_customColor1" Variant="Variant.Outlined" Label="Custom Color 1" />
            <MudColorPicker Disabled="true" @bind-Value="_customColor2" Variant="Variant.Outlined" Label="Custom Color 2" />
        </MudStack>
    </MudItem>
</MudGrid>

@code {
    MudColor _primaryColor = new MudColor("#6750A4");
    MudColor _secondaryColor = new MudColor("#625B71");
    MudColor _tertiaryColor = new MudColor("#7D5260");
    MudColor _neutralColor = new MudColor("#615D67");
    MudColor _neutralVariantColor = new MudColor("#5F5D62");
    MudColor _errorColor = new MudColor("#B3261E");

    MudColor _customColor1 = new MudColor("#434C56");
    MudColor _customColor2 = new MudColor("#FBEC5D");

    Dictionary<string, string> _customColors = new()
    {
        {"hailnavy", "#434C56"},
        {"maize", "#FBEC5D"}
    };


    int _mainTone = 40;
    int _containerTone = 90;
    bool _showAllTones = true;
    bool _darkMode = false;
}
